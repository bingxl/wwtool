// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package i18n

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en":      &dictionary{index: enIndex, data: enData},
		"zh_Hans": &dictionary{index: zh_HansIndex, data: zh_HansData},
	}
	fallback := language.MustParse("zh-Hans")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"打开文件失败：%v":      7,
	"新手唤取":           4,
	"新手自选唤取":         5,
	"新手自选唤取（感恩定向唤取）": 6,
	"武器常驻唤取":         3,
	"武器活动唤取":         1,
	"角色常驻唤取":         2,
	"角色活动唤取":         0,
	"读取文件失败：%v":      8,
}

var enIndex = []uint32{ // 10 elements
	0x00000000, 0x0000001b, 0x00000033, 0x0000004e,
	0x00000066, 0x00000077, 0x00000091, 0x000000c8,
	0x000000e1, 0x000000fa,
} // Size: 64 bytes

const enData string = "" + // Size: 250 bytes
	"\x02Featured Resonator Convene\x02Featured Weapon Convene\x02Standard Re" +
	"sonator Convene\x02Standard Weapon Convene\x02Beginner Convene\x02Beginn" +
	"er's Choice Convene\x02Beginner's Choice Convene（Giveback Custom Convene" +
	"）\x02error to open file %[1]v\x02filed to read file %[1]v"

var zh_HansIndex = []uint32{ // 10 elements
	0x00000000, 0x00000013, 0x00000026, 0x00000039,
	0x0000004c, 0x00000059, 0x0000006c, 0x00000097,
	0x000000b2, 0x000000cd,
} // Size: 64 bytes

const zh_HansData string = "" + // Size: 205 bytes
	"\x02角色活动唤取\x02武器活动唤取\x02角色常驻唤取\x02武器常驻唤取\x02新手唤取\x02新手自选唤取\x02新手自选唤取（感恩定" +
	"向唤取）\x02打开文件失败：%[1]v\x02读取文件失败：%[1]v"

	// Total table size 583 bytes (0KiB); checksum: 9C872AEB
